{"version":3,"sources":["components/Step1.js","components/Step2.js","App.js","serviceWorker.js","index.js"],"names":["Step1","react_default","a","createElement","Row","Col","Form","noValidate","validated","this","props","onSubmit","handleSubmit","Group","controlId","Control","size","type","placeholder","value","url","onChange","handleChange","required","Feedback","Button","variant","disabled","disable","React","Component","Step2","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loading","data","error","_this2","fetch","concat","then","res","text","result","rows","DOMParser","parseFromString","getElementsByClassName","i","length","row","no","querySelectorAll","innerText","replace","trim","draw","form","horse","age","wgt","dataset","orderWgt","jockey","trainer","rtf","allowance","or","ts","rpr","Math","trunc","substr","push","setState","_this$state","map","index","key","dangerouslySetInnerHTML","__html","Fragment","className","Spinner","animation","Table","striped","bordered","hover","colSpan","App","bind","assertThisInitialized","valid","event","target","currentTarget","preventDefault","stopPropagation","checkValidity","step2","components_Step2","Container","components_Step1","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6cf4b81.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\n\nclass Step1 extends React.Component {\n  render() {\n    return (\n      <Row>\n        <Col>\n          <Form\n            noValidate\n            validated={this.props.validated}\n            onSubmit={this.props.handleSubmit}\n          >\n            <Form.Group controlId=\"formURL\">\n              <Form.Control size=\"lg\" type=\"url\" placeholder=\"Enter racing post URL\" value={this.props.url} onChange={this.props.handleChange} required />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">Invalid URL! Example: https://www.racingpost.com/racecards/193/navan/2019-07-13/735427/at-a-glance</Form.Control.Feedback>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\" size=\"lg\" disabled={this.props.disable}>Submit</Button>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default Step1;\n","import React from 'react';\n\nimport { Row, Col, Table, Spinner } from 'react-bootstrap';\n\nclass Step2 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      data: [],\n      error: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://api.codetabs.com/v1/proxy?quest=${this.props.url}`)\n      .then(res => res.text())\n      .then(\n        (result) => {\n          let parser = new DOMParser();\n          let doc = parser.parseFromString(result, 'text/html');\n\n          let rows = doc.getElementsByClassName('RC-glanceRunnerRow');\n\n          let data = [];\n\n          for (var i = 0; i < rows.length; i++) {\n            let row = {\n              no: rows[i].querySelectorAll('.RC-glanceRunner__no')[0].innerText.replace(/^\\s+|\\s+$/, '').trim(),\n              draw: rows[i].querySelectorAll('.RC-glanceRunner__draw')[0].innerText.replace(/^\\s+|\\s+$/, '').trim(),\n              form: rows[i].querySelectorAll('.RC-glanceRunner__form')[0].innerText.replace(/\\D/g, '').trim(),\n              horse: rows[i].querySelectorAll('.RC-glanceRunner__name')[0].innerText.replace(/^\\s+|\\s+$/, '').trim(),\n              age: rows[i].querySelectorAll('.RC-glanceRunner__age')[0].innerText.replace(/^\\s+|\\s+$/, '').trim(),\n              wgt: rows[i].querySelectorAll('.RC-glanceRunner__wgt')[0].dataset.orderWgt,\n              jockey: rows[i].querySelectorAll('.RC-glanceRunner__team_jockey .RC-glanceRunner__teamName')[0].innerText.replace(/^\\s+|\\s+$/, '').trim(),\n              trainer: rows[i].querySelectorAll('.RC-glanceRunner__team_trainer .RC-glanceRunner__teamName')[0].innerText.replace(/^\\s+|\\s+$/, '').trim(),\n              rtf: rows[i].querySelectorAll('.RC-glanceRunner__team_trainer .RC-glanceRunner__teamCount')[0].innerText.replace(/^\\s+|\\s+$/, '').trim(),\n              allowance: rows[i].querySelectorAll('.RC-glanceRunner__team_jockey .RC-glanceRunner__teamCount')[0].innerText.replace(/^\\s+|\\s+$/, '').trim(),\n              or: rows[i].querySelectorAll('.RC-glanceRunner__or')[0].innerText.replace(/^\\s+|\\s+$/, '').trim(),\n              ts: rows[i].querySelectorAll('.RC-glanceRunner__ts')[0].innerText.replace(/^\\s+|\\s+$/, '').trim(),\n              rpr: rows[i].querySelectorAll('.RC-glanceRunner__rpr')[0].innerText.replace(/^\\s+|\\s+$/, '').trim()\n            };\n\n            row.wgt = `${Math.trunc(row.wgt / 14)} ${row.wgt % 14}`;\n\n            if (row.form.length > 3) {\n              row.form = row.form.substr(row.form.length - 3, 3);\n            }\n\n            data.push(row);\n          }\n\n          this.setState({\n            loading: false,\n            data: data\n          });\n        },\n        (error) => {\n          this.setState({\n            loading: false,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { url } = this.props;\n    const { loading, data } = this.state;\n\n    const rows = data.map((row, index) =>\n      <tr key={index}>\n        <td>{row.no}</td>\n        <td>{row.draw}</td>\n        <td dangerouslySetInnerHTML={{__html: row.form}} />\n        <td>{row.horse}</td>\n        <td>{row.age}</td>\n        <td dangerouslySetInnerHTML={{__html: row.wgt}} />\n        <td>{row.trainer}</td>\n        <td>{row.rtf}</td>\n        <td>{row.jockey}</td>\n        <td>{row.allowance}</td>\n        <td>{row.or}</td>\n        <td>{row.ts}</td>\n        <td>{row.rpr}</td>\n      </tr>\n    );\n\n    return (\n      <>\n        {\n          loading ? \n          <Row className=\"text-center\">\n            <Col>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </Col>\n          </Row>\n          : \n          <>\n            <Row>\n              <Col>\n                <h4 className=\"py-3\">Result for: {url}</h4>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Table striped bordered hover size=\"sm\">\n                  <thead>\n                    <tr>\n                      <th colSpan=\"2\">NO.</th>\n                      <th>DRAW</th>\n                      <th>HORSE</th>\n                      <th>AGE</th>\n                      <th>WGT</th>\n                      <th colSpan=\"2\">TRAINER <small>RTF%</small></th>\n                      <th colSpan=\"2\">JOCKEY <small>Allowance</small></th>\n                      <th>OR</th>\n                      <th>TS</th>\n                      <th>RPR</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {rows}\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </>\n          }\n      </>\n    );\n  }\n}\n\nexport default Step2;\n","import React, { Component } from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport Step1 from './components/Step1';\nimport Step2 from './components/Step2';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      url: '',\n      validated: false,\n      valid: false,\n      disable: false\n    };\n  }\n\n  handleChange(event) {\n    this.setState({ \n      url: event.target.value,\n      validated: false,\n      valid: false\n     });\n  }\n\n  handleSubmit(event) {\n    this.setState({ disable: true });\n    const form = event.currentTarget;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (form.checkValidity() === false) {\n      this.setState({ valid: false });\n    } else {\n      this.setState({ valid: true });\n    }\n\n    this.setState({ \n      validated: true,\n      disable: false \n    });\n  }\n  \n  render() {\n    const { url, validated, valid , disable} = this.state;\n    let step2;\n\n    if (valid && validated) {\n      step2 = <Step2 url={url} />\n    }\n\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h1 className=\"text-center py-5\">Racing Post - 'At a Glance' Scraper</h1>\n          </Col>\n        </Row>\n        <Step1 url={url} validated={validated} valid={valid} handleChange={this.handleChange} handleSubmit={this.handleSubmit} disable={disable} />\n        {step2}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}